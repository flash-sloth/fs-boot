fs:
  mysql: &db-mysql
    db-type: mysql
    validation-query: SELECT 'x'
    filters: stat,wall
    username: 'root'
    password: 'root'
    driverClassName: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/flash_sloth?serverTimezone=Asia/Shanghai&characterEncoding=utf8&useUnicode=true&useSSL=false&autoReconnect=true&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true&nullCatalogMeansCurrent=true
  database: # 字段介绍参考 DatabaseProperties
    # 全局的租户ID字段名
    tenantIdColumn: 'tenant_id'
    plus:
      maxLimit: -1
      overflow: true
      optimizeJoin: true
      # 是否启用  sql性能规范插件
      isBlockAttack: false
      isIllegalSql: false
    flex:
      audit: true
      auditCollector: DEFAULTS
      logicDeleteProcessor: TIME_STAMP_DEL_BY_LOGIC_DELETE_PROCESSOR
    # id生成策略
    id-type: CACHE
    hutoolId:
      workerId: 0
      dataCenterId: 0
    cache-id:
      time-bits: 31
      worker-bits: 22
      seq-bits: 10
      epochStr: '2020-09-15'
      boost-power: 3
      padding-factor: 50

mybatis-flex:
  mapper-locations:
    - classpath*:/mapper/**/*.xml
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: false
    jdbc-type-for-null: null
    auto-mapping-unknown-column-behavior: none
    auto-mapping-behavior: full
  global-config:
    # 全局配置逻辑删除字段，表中有该字段就会进行逻辑删除，否则进行物理删除
    logicDeleteColumn: del_flag
    tenantColumn: ${fs.database.tenantIdColumn}
    key-config:
      before: true
      key-type: generator
      value: 'uid'

spring:
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      enable: true
      <<: *db-mysql
      # <<: *db-sqlserver
      # <<: *db-oracle
      initialSize: 10
      minIdle: 10
      maxActive: 200
      max-wait: 60000
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      test-on-borrow: false
      test-on-return: false
      test-while-idle: true
      time-between-eviction-runs-millis: 60000  #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      min-evictable-idle-time-millis: 300000    #配置一个连接在池中最小生存的时间，单位是毫秒
      filter:
        wall:
          enabled: true
          config:
            strictSyntaxCheck: false
            commentAllow: true
            multiStatementAllow: true
            noneBaseStatementAllow: true
        slf4j:
          enabled: false       # 使用slf4j打印可执行日志时，改成true
          statement-executable-sql-log-enable: true  # 打印类似 p6spy 的可执行SQL 日志
      # 以下的2段配置，同时适用于所有模式
      web-stat-filter: # WebStatFilter配置，说明请参考Druid Wiki，配置_配置WebStatFilter
        enabled: true
        url-pattern: /*
        exclusions: "*.js , *.gif ,*.jpg ,*.png ,*.css ,*.ico , /druid/*"
        session-stat-max-count: 1000
        profile-enable: true
        session-stat-enable: false
      stat-view-servlet: #展示Druid的统计信息,StatViewServlet的用途包括：1.提供监控信息展示的html页面2.提供监控信息的JSON API
        enabled: true
        url-pattern: /druid/*   #根据配置中的url-pattern来访问内置监控页面，如果是上面的配置，内置监控页面的首页是/druid/index.html例如：http://127.0.0.1:9000/druid/index.html
        reset-enable: true    #允许清空统计数据
        login-username: ''
        login-password: ''
        allow: ''


# 单体项目没有启用mybatis-plus
mybatis-plus:
  mapper-locations:
    - classpath*:mapper/**/*Mapper.xml
  #实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: top.fsfsfs.boot.*.entity;top.fsfsfs.basic.database.mybatis.typehandler
  typeEnumsPackage: top.fsfsfs.boot.*.enumeration
  global-config:
    db-config:
      id-type: INPUT
      insert-strategy: NOT_NULL
      update-strategy: NOT_NULL
      where-strategy: NOT_EMPTY
  configuration:
    #配置返回数据库(column下划线命名&&返回java实体是驼峰命名)，自动匹配无需as（没开启这个，SQL需要写as： select user_id as userId）
    map-underscore-to-camel-case: true
    cache-enabled: false
    #配置JdbcTypeForNull, oracle数据库必须配置
    jdbc-type-for-null: 'null'
    default-enum-type-handler: top.fsfsfs.basic.mybatisplus.mybatis.handlers.MybatisEnumTypeHandler
