fs:
  db:
    conn:
      str: serverTimezone=Asia/Shanghai&characterEncoding=utf8&useUnicode=true&useSSL=false&autoReconnect=true&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true&nullCatalogMeansCurrent=true

  feign:
    # xxl-job-admin 的地址
    job-server: http://127.0.0.1:8767
  scan:
    enabled: true
    basePackage: top.fsfsfs
  authentication:
    expire: 28800               # token有效期为8小时
    refreshExpire: 86400        # 刷新token有效期为24小时
    # jwt 签名，长度至少32位。 建议每个公司都修改一下这个字符串
    jwtSignKey: 'fsfsfs-cloud_is_a_fantastic_project'
  system:
    # 登录时否验证密码有效性 （常用于开发环境快速登录）
    verifyPassword: true
    # 登录时否验证验证码有效性 （常用于开发环境快速登录）
    verifyCaptcha: true
    # 默认用户密码
    defPwd: '123456'
    # 密码最大输错次数  小于0不限制
    maxPasswordErrorNum: 10
    # 密码错误锁定用户时间  除了0表示锁定到今天结束，还支持m、h、d、w、M、y等单位
    passwordErrorLockUserTime: '0'
    # log记录
    recordLog: true
    recordArgs: true
    recordResult: true
    # 缓存Key前缀
    cachePrefix: fsb
    # oauth 服务扫描枚举类的包路径
    enumPackage: "top.fsfsfs"
  ignore:
    # 是否启用网关的 uri权限鉴权 (设置为false，则后台不校验访问权限)
    authEnabled: true
    # 前端校验按钮 是否区分大小写
    caseSensitive: false
    anyone: # 请求中 需要携带Tenant 且 需要携带Token(不需要登录)，但不需要验证uri权限
      ALL:
        - /**/anyone/**
        - /service/model/*/json
        - /service/model/*/save
        - /service/editor/stencilset
    anyUser: # 请求中 需要携带Tenant，但 不需要携带Token(不需要登录) 和 不需要验证uri权限
      ALL:
        - /**/anyUser/**
    anyTenant: # 请求中 不需要携带Tenant 且 不需要携带Token(不需要登录) 和 不需要验证uri权限
      ALL:
        - /**/anyTenant/**
  echo: #详情看: EchoProperties
    # 是否启用 远程数据 注解AOP注入
    aop-enabled: true
    # 字典类型 和 code 的分隔符
    dictSeparator: '###'
    # 多个字典code 之间的的分隔符
    dictItemSeparator: ','
    # 递归最大深度
    maxDepth: 3
    # 本地缓存配置信息 生产慎用
    guavaCache:
      enabled: false
      maximumSize: 1000
      refreshWriteTime: 2
      refreshThreadPoolSize: 10
  webmvc:
    undertow: true
    header: false
  log: # 详情看：OptLogProperties
    # 开启记录操作日志
    enabled: true
    # 记录到什么地方  DB:mysql LOGGER:日志文件
    type: DB
  xss:
    # 是否开启 xss 过滤器  详情看：XssProperties
    enabled: true
    # 是否启用 RequestBody 注解标记的参数 反序列化时过滤XSS
    requestBodyEnabled: false
    ignoreParamValues:
      - noxss
  captcha:
    # 登录界面的验证码配置 详情看：CaptchaProperties
    type: ARITHMETIC
    width: 158
    height: 58
    len: 2
    charType: 2
  async: # 全局线程池配置
    corePoolSize: 2
    maxPoolSize: 50
    queueCapacity: 10000
    keepAliveSeconds: 300
    threadNamePrefix: 'fs-async-executor-'

spring:
  config:
    # 配置优先级： ./application-${spring.profiles.active}.yml >= /config/${spring.profiles.active}/*.yml >= ./application.yml >= bootstrap-${spring.profiles.active}.yml >= bootstrap.yml
    # import的文件顺序越靠后，优先级越大
    import:
      - classpath:config/${spring.profiles.active}/doc.yml
      - classpath:config/${spring.profiles.active}/oss.yml
      - classpath:config/${spring.profiles.active}/mysql.yml
      - classpath:config/${spring.profiles.active}/redis.yml
  mvc:
    pathmatch:
      # 升级springboot2.6.6后临时处理，防止swagger报错
      matching-strategy: ANT_PATH_MATCHER
  lifecycle:
    # 优雅停机宽限期时间
    timeout-per-shutdown-phase: 30s
  servlet:
    # 上传文件最大值
    multipart:
      max-file-size: 512MB
      max-request-size: 512MB
  freemarker:
    suffix: .ftl
    cache: false
    charset: UTF-8
    contentType: text/html
    requestContextAttribute: ctx
    templateEncoding: UTF-8
    templateLoaderPath: classpath:/
    settings:
      defaultEncoding: UTF-8
      url_escaping_charset: UTF-8
      locale: zh_CN

server:
  port: 15500
  # 优雅停机
  shutdown: GRACEFUL
  servlet:
    encoding:
      enabled: true
      charset: UTF-8
      force: true
  undertow:
    threads:
      io: 4 # 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程
      worker: 80  # 阻塞任务线程池, 当执行类似servlet请求阻塞操作, undertow会从这个线程池中取得线程,它的值设置取决于系统的负载
    buffer-size: 2048  # 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理 , 每块buffer的空间大小,越小的空间被利用越充分
    direct-buffers: true  # 是否分配的直接内存

  mapper-locations:
    - classpath*:/mapper/**/*.xml
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: false
    jdbc-type-for-null: null
    auto-mapping-unknown-column-behavior: none
    auto-mapping-behavior: full
  global-config:
    deleted-value-of-logic-delete: "1"
    normal-value-of-logic-delete: "0"
    key-config:
      before: true
      key-type: generator
      value: 'uid'

management:
  endpoints:
    web:
      base-path: /actuator
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: ALWAYS
      enabled: true

magic-api:
  #配置web页面入口
  web: /magic/web
  resource: #配置存储方式
    type: database # 配置存储在数据库中
    tableName: magic_api_file_v2 # 数据库中的表名
    #    datasource: master #指定数据源（单数据源时无需配置，多数据源时默认使用主数据源，如果存在其他数据源中需要指定。）
    prefix: /magic-api # key前缀
    readonly: false # 是否是只读模式
  #  security: # 安全配置
  #    username: admin # 登录用的用户名
  #    password: 123456 # 登录用的密码
  prefix: /magic-api
  editor-config: classpath:./magic-editor-config.js #编辑器配置
  date-pattern: # 配置请求参数支持的日期格式
    - yyyy-MM-dd
    - yyyy-MM-dd HH:mm:ss
    - yyyyMMddHHmmss
    - yyyyMMdd
  response: |- #配置JSON格式，格式为magic-script中的表达式
    {
      code: code,
      msg: message,
      data,
      timestamp,
      requestTime,
      executeTime,
    }
  response-code:
    success: 0 #执行成功的code值
    invalid: 10400 #参数验证未通过的code值
    exception: 10500 #执行出现异常的code值
  backup: #备份相关配置
    enable: true #是否启用
    max-history: -1 #备份保留天数，-1为永久保留
    table-name: magic_api_backup_v2 #使用数据库存储备份时的表名
  crud: # CRUD相关配置
    logic-delete-column: delete_mark #逻辑删除列
    logic-delete-value: 1 #逻辑删除值
  page:
    size: size # 页大小的参数名称
    page: limit # 页码的参数名称
    default-page: 1 # 未传页码时的默认首页
    default-size: 10 # 未传页大小时的默认页大小
  debug:
    timeout: 60 # 断点超时时间，默认60s
  throw-exception: true # 执行出错时，异常将抛出处理
  auto-import-module: db,http,log,request,response,env,magic #自动导入模块

#    location: classpath:magic-api
# 其它配置请参考 https://ssssssss.org/magic-api/config/